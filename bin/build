#!/usr/bin/env bash

function usage(){
  echo "Usage: $0 [seandroid|selinux|userspace]"
  exit
}

[[ $# -eq 0 ]] && usage

# Run make and make sure it passes or exit with a message
function my_make(){
  cmd="make $@" 
  $cmd
  ret=$?
  if [ $ret -ne 0 ]
  then
    echo "Failed while running: $cmd"
    notify "Failed" $ret
  fi
}

function my_build(){
  target=$1

  # Make depending on target
  case $target in
    # Just build the kernel
    selinux)
      pushd $PREFIX/kernel/goldfish
      my_make ARCH=arm goldfish_armv7_defconfig
      my_make ARCH=arm CROSS_COMPILE=$PREFIX/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
      popd
      ;;
    # Build everything we should need for SEAndroid
    seandroid)
      my_build selinux
      my_build droid
      ;;
    # Build the tools we'll need
    tools)
      for t in adb emulator
      do
        my_build $t
      done
      ;;
    # Update the policy and systemimage
    policy)
      my_build sepolicy 
      build snod
      ;;
    *)
      my_make -j4 HAVE_SELINUX=true $target
      ;;
  esac
}

function notify(){
  NOTIFY_IMG="$ANDROID_BINDIR/android.png"
  NOTIFY_SOUND="/usr/share/sounds/KDE-Im-Internal-Error.ogg"

  status="critical"
  if [[ -z $2 ]]; then status="normal"; fi
  notify-send -u $status -i "$NOTIFY_IMG" $1 "Building $target" & paplay $NOTIFY_SOUND
  exit 
}

target=$1

# Get the environment setup
pushd $PREFIX
source build/envsetup.sh
setpaths
lunch full-eng

# Run the build and time it
time my_build $target

# Return cleanly
popd

notify "Success!"
